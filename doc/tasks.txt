TODO:

Alec:
Write code to calculate velocity
	How to work that into balancing
Write code to spin/pivot/smooth turn
Take a look at no-dependency MPU6050 code at http://www.pieter-jan.com/node/15

Yaw:
3D print chassis
	Secure IMU so it is as close to aligned as possible
		Get precise starting angle
	Add training wheels or similar
	3D print new mounting to put Pi and motor driver on middle layer


ONCE SCHOOL STARTS:
Physically test balance_pthread code using MDD10A
Physically test balance/roaming code using Roboclaw
	Adjust max motor speed
Write code to estimate position using Roboclaw encoder count (1920 counts per revolution)


LATER:
Self-rising
Obstacle avoidance


DEAN'S SUGGESTIONS
Increase max speed
Use encoder to account for varying surfaces
Eventually control motors separately
